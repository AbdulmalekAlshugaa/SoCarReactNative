{"ast":null,"code":"var _jsxFileName = \"P:\\\\React Native\\\\Moah Course\\\\End\\\\app\\\\screens\\\\ListingsScreen.js\";\nimport React, { useEffect, useState, useRef } from \"react\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport MapView from \"react-native-maps\";\nimport ActivityIndicator from \"../components/ActivityIndicator\";\nimport Button from \"../components/Button\";\nimport Card from \"../components/Card\";\nimport colors from \"../config/colors\";\nimport listingsApi from \"../api/listings\";\nimport routes from \"../navigation/routes\";\nimport Screen from \"../components/Screen\";\nimport AppText from \"../components/Text\";\nimport useApi from \"../hooks/useApi\";\nimport useLocation from \"../hooks/useLocation\";\nimport authStorage from \"../auth/storage\";\n\nvar _Dimensions$get = Dimensions.get(\"window\"),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n\nvar CARD_HEIGHT = height / 3;\nvar CARD_WIDTH = CARD_HEIGHT - 50;\n\nfunction ListingsScreen(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation;\n  var location = useLocation();\n  var getListingsApi = useApi(listingsApi.getListings);\n  var scrollX = useRef(new Animated.Value(0)).current;\n\n  var _useState = useState(3.055380534980177),\n      latitude = _useState.latitude,\n      setlatitude = _useState.setlatitude;\n\n  var _useState2 = useState(101.69320367420157),\n      longitude = _useState2.longitude,\n      setlongitude = _useState2.setlongitude;\n\n  var getCurrentLocation = function getCurrentLocation() {\n    if (location) {}\n  };\n\n  var bookingAlter = function bookingAlter() {\n    return Alert.alert(\"Booking Confirmation\", \"Are you sure you want to book this care\", [{\n      text: \"Cancel\",\n      onPress: function onPress() {\n        return console.log(\"Cancel Pressed\");\n      },\n      style: \"cancel\"\n    }, {\n      text: \"OK\",\n      onPress: function onPress() {\n        return console.log(\"OK Pressed\");\n      }\n    }], {\n      cancelable: false\n    });\n  };\n\n  useEffect(function () {\n    getCurrentLocation();\n  }, []);\n  var interpolations = getListingsApi.data.map(function (marker, index) {\n    var inputRange = [(index - 1) * CARD_WIDTH, index * CARD_WIDTH, (index + 1) * CARD_WIDTH];\n    var scale = scrollX.interpolate({\n      inputRange: inputRange,\n      outputRange: [1, 2.5, 1],\n      extrapolate: \"clamp\"\n    });\n    var opacity = scrollX.interpolate({\n      inputRange: inputRange,\n      outputRange: [0.35, 1, 0.35],\n      extrapolate: \"clamp\"\n    });\n    return {\n      scale: scale,\n      opacity: opacity\n    };\n  });\n  return React.createElement(React.Fragment, null, React.createElement(ActivityIndicator, {\n    visible: getListingsApi.loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }), React.createElement(Screen, {\n    style: styles.screen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, React.createElement(MapView, {\n    rotateEnabled: true,\n    scrollEnabled: true,\n    showsMyLocationButton: true,\n    followsUserLocation: true,\n    showsUserLocation: true,\n    zoomEnabled: true,\n    showsPointsOfInterest: true,\n    style: styles.map,\n    initialRegion: {\n      latitude: 3.055380534980177,\n      longitude: 101.69320367420157,\n      latitudeDelta: 0.0,\n      longitudeDelta: 0.0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, getListingsApi.data.map(function (marker, index) {\n    var scaleStyle = {\n      transform: [{\n        scale: interpolations[index].scale\n      }]\n    };\n    var opacityStyle = {\n      opacity: interpolations[index].opacity\n    };\n    return React.createElement(MapView.Marker, {\n      key: index,\n      coordinate: marker.location,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 15\n      }\n    }, React.createElement(Animated.View, {\n      style: [styles.markerWrap, opacityStyle],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }\n    }, React.createElement(Animated.View, {\n      style: [styles.ring, scaleStyle],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 19\n      }\n    }), React.createElement(View, {\n      style: styles.marker,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 19\n      }\n    }), React.createElement(Image, {\n      source: {\n        uri: marker.images[0].url\n      },\n      style: {\n        height: 35,\n        width: 35\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 19\n      }\n    })));\n  })), React.createElement(Animated.ScrollView, {\n    horizontal: true,\n    scrollEventThrottle: 1,\n    showsHorizontalScrollIndicator: false,\n    snapToInterval: CARD_WIDTH,\n    style: styles.scrollView,\n    onScroll: Animated.event([{\n      nativeEvent: {\n        contentOffset: {\n          x: scrollX\n        }\n      }\n    }], {\n      useNativeDriver: true\n    }),\n    contentContainerStyle: styles.endPadding,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }\n  }, getListingsApi.data.map(function (marker, index) {\n    return React.createElement(View, {\n      style: styles.card,\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 13\n      }\n    }, React.createElement(Image, {\n      source: {\n        uri: marker.images[0].url\n      },\n      style: styles.cardImage,\n      resizeMode: \"cover\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 15\n      }\n    }), React.createElement(View, {\n      style: styles.textContent,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 15\n      }\n    }, React.createElement(Text, {\n      numberOfLines: 1,\n      style: styles.cardtitle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }\n    }, marker.title), React.createElement(Text, {\n      numberOfLines: 1,\n      style: styles.cardDescription,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }\n    }, marker.description), React.createElement(View, {\n      style: styles.button,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }\n    }, React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        bookingAlter();\n      },\n      style: [styles.book, {\n        borderColor: \"#FF6347\",\n        borderWidth: 1\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 19\n      }\n    }, React.createElement(Text, {\n      style: [styles.textbook, {\n        color: \"#FF6347\"\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 21\n      }\n    }, \"Book Now\")))));\n  }))));\n}\n\nvar styles = StyleSheet.create({\n  screen: {\n    padding: 0,\n    backgroundColor: colors.light\n  },\n  map: {\n    width: Dimensions.get(\"window\").width,\n    height: Dimensions.get(\"window\").height\n  },\n  marker: {\n    width: 8,\n    height: 8,\n    borderRadius: 4,\n    backgroundColor: \"rgba(130,4,150, 0.9)\"\n  },\n  scrollView: {\n    position: \"absolute\",\n    bottom: 20,\n    left: 0,\n    right: 0,\n    paddingVertical: 10\n  },\n  endPadding: {\n    paddingRight: 10\n  },\n  card: {\n    padding: 10,\n    elevation: 2,\n    backgroundColor: \"#FFF\",\n    marginHorizontal: 10,\n    shadowColor: \"#000\",\n    shadowRadius: 5,\n    shadowOpacity: 0.3,\n    shadowOffset: {\n      x: 2,\n      y: -2\n    },\n    height: CARD_HEIGHT,\n    width: CARD_WIDTH,\n    overflow: \"hidden\"\n  },\n  cardImage: {\n    flex: 3,\n    width: \"100%\",\n    height: \"100%\",\n    alignSelf: \"center\"\n  },\n  textContent: {\n    flex: 1\n  },\n  cardtitle: {\n    fontSize: 12,\n    marginTop: 5,\n    fontWeight: \"bold\"\n  },\n  cardDescription: {\n    fontSize: 12,\n    color: \"#444\"\n  },\n  markerWrap: {\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  ring: {\n    width: 24,\n    height: 24,\n    borderRadius: 12,\n    backgroundColor: \"rgba(130,4,150, 0.3)\",\n    position: \"absolute\",\n    borderWidth: 1,\n    borderColor: \"rgba(130,4,150, 0.5)\"\n  },\n  button: {\n    alignItems: \"center\",\n    marginTop: 5\n  },\n  book: {\n    width: \"100%\",\n    padding: 5,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderRadius: 3\n  },\n  textbook: {\n    fontSize: 14,\n    fontWeight: \"bold\"\n  }\n});\nexport default ListingsScreen;","map":{"version":3,"sources":["P:/React Native/Moah Course/End/app/screens/ListingsScreen.js"],"names":["React","useEffect","useState","useRef","MapView","ActivityIndicator","Button","Card","colors","listingsApi","routes","Screen","AppText","useApi","useLocation","authStorage","Dimensions","get","width","height","CARD_HEIGHT","CARD_WIDTH","ListingsScreen","navigation","location","getListingsApi","getListings","scrollX","Animated","Value","current","latitude","setlatitude","longitude","setlongitude","getCurrentLocation","bookingAlter","Alert","alert","text","onPress","console","log","style","cancelable","interpolations","data","map","marker","index","inputRange","scale","interpolate","outputRange","extrapolate","opacity","loading","styles","screen","latitudeDelta","longitudeDelta","scaleStyle","transform","opacityStyle","markerWrap","ring","uri","images","url","scrollView","event","nativeEvent","contentOffset","x","useNativeDriver","endPadding","card","cardImage","textContent","cardtitle","title","cardDescription","description","button","book","borderColor","borderWidth","textbook","color","StyleSheet","create","padding","backgroundColor","light","borderRadius","position","bottom","left","right","paddingVertical","paddingRight","elevation","marginHorizontal","shadowColor","shadowRadius","shadowOpacity","shadowOffset","y","overflow","flex","alignSelf","fontSize","marginTop","fontWeight","alignItems","justifyContent"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\nimport {\n  FlatList,\n  StyleSheet,\n  Text,\n  View,\n  Dimensions,\n  ScrollView,\n  Image,\n  Animated,\n  TouchableOpacity,\n  Alert,\n} from \"react-native\";\nimport MapView from \"react-native-maps\";\nimport ActivityIndicator from \"../components/ActivityIndicator\";\nimport Button from \"../components/Button\";\nimport Card from \"../components/Card\";\nimport colors from \"../config/colors\";\nimport listingsApi from \"../api/listings\";\nimport routes from \"../navigation/routes\";\nimport Screen from \"../components/Screen\";\nimport AppText from \"../components/Text\";\nimport useApi from \"../hooks/useApi\";\nimport useLocation from \"../hooks/useLocation\";\nimport authStorage from \"../auth/storage\";\n\nconst { width, height } = Dimensions.get(\"window\");\nconst CARD_HEIGHT = height / 3;\nconst CARD_WIDTH = CARD_HEIGHT - 50;\n\nfunction ListingsScreen({ navigation }) {\n  const location = useLocation();\n  const getListingsApi = useApi(listingsApi.getListings);\n  const scrollX = useRef(new Animated.Value(0)).current;\n  const { latitude, setlatitude } = useState(3.055380534980177);\n  const { longitude, setlongitude } = useState(101.69320367420157);\n\n  const getCurrentLocation = () => {\n    if (location) {\n    }\n    // get location from the server\n  };\n  const bookingAlter = () =>\n    Alert.alert(\n      \"Booking Confirmation\",\n      \"Are you sure you want to book this care\",\n      [\n        {\n          text: \"Cancel\",\n          onPress: () => console.log(\"Cancel Pressed\"),\n          style: \"cancel\",\n        },\n        { text: \"OK\", onPress: () => console.log(\"OK Pressed\") },\n      ],\n      { cancelable: false }\n    );\n\n  useEffect(() => {\n    getCurrentLocation();\n    // getListingsApi.request();\n  }, []);\n\n  const interpolations = getListingsApi.data.map((marker, index) => {\n    const inputRange = [\n      (index - 1) * CARD_WIDTH,\n      index * CARD_WIDTH,\n      (index + 1) * CARD_WIDTH,\n    ];\n    const scale = scrollX.interpolate({\n      inputRange,\n      outputRange: [1, 2.5, 1],\n      extrapolate: \"clamp\",\n    });\n    const opacity = scrollX.interpolate({\n      inputRange,\n      outputRange: [0.35, 1, 0.35],\n      extrapolate: \"clamp\",\n    });\n    return { scale, opacity };\n  });\n\n  return (\n    <>\n      <ActivityIndicator visible={getListingsApi.loading} />\n      <Screen style={styles.screen}>\n        <MapView\n          rotateEnabled={true}\n          scrollEnabled={true}\n          showsMyLocationButton={true}\n          followsUserLocation={true}\n          showsUserLocation={true}\n          zoomEnabled={true}\n          showsPointsOfInterest={true}\n          style={styles.map}\n          initialRegion={{\n            latitude: 3.055380534980177,\n            longitude: 101.69320367420157,\n            latitudeDelta: 0.0,\n            longitudeDelta: 0.0,\n          }}\n        >\n          {getListingsApi.data.map((marker, index) => {\n            const scaleStyle = {\n              transform: [\n                {\n                  scale: interpolations[index].scale,\n                },\n              ],\n            };\n            const opacityStyle = {\n              opacity: interpolations[index].opacity,\n            };\n            return (\n              <MapView.Marker key={index} coordinate={marker.location}>\n                <Animated.View style={[styles.markerWrap, opacityStyle]}>\n                  <Animated.View style={[styles.ring, scaleStyle]} />\n                  <View style={styles.marker} />\n\n                  <Image\n                    source={{ uri: marker.images[0].url }}\n                    style={{ height: 35, width: 35 }}\n                  />\n                </Animated.View>\n              </MapView.Marker>\n            );\n          })}\n        </MapView>\n\n        <Animated.ScrollView\n          horizontal\n          scrollEventThrottle={1}\n          showsHorizontalScrollIndicator={false}\n          snapToInterval={CARD_WIDTH}\n          style={styles.scrollView}\n          onScroll={Animated.event(\n            [\n              {\n                nativeEvent: {\n                  contentOffset: {\n                    x: scrollX,\n                  },\n                },\n              },\n            ],\n            { useNativeDriver: true }\n          )}\n          contentContainerStyle={styles.endPadding}\n        >\n          {getListingsApi.data.map((marker, index) => (\n            <View style={styles.card} key={index}>\n              <Image\n                source={{ uri: marker.images[0].url }}\n                style={styles.cardImage}\n                resizeMode=\"cover\"\n              />\n              <View style={styles.textContent}>\n                <Text numberOfLines={1} style={styles.cardtitle}>\n                  {marker.title}\n                </Text>\n                <Text numberOfLines={1} style={styles.cardDescription}>\n                  {marker.description}\n                </Text>\n                <View style={styles.button}>\n                  <TouchableOpacity\n                    onPress={() => {\n                      bookingAlter();\n                    }}\n                    style={[\n                      styles.book,\n                      {\n                        borderColor: \"#FF6347\",\n                        borderWidth: 1,\n                      },\n                    ]}\n                  >\n                    <Text\n                      style={[\n                        styles.textbook,\n                        {\n                          color: \"#FF6347\",\n                        },\n                      ]}\n                    >\n                      Book Now\n                    </Text>\n                  </TouchableOpacity>\n                </View>\n              </View>\n            </View>\n          ))}\n        </Animated.ScrollView>\n      </Screen>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  screen: {\n    padding: 0,\n    backgroundColor: colors.light,\n  },\n  map: {\n    width: Dimensions.get(\"window\").width,\n    height: Dimensions.get(\"window\").height,\n  },\n  marker: {\n    width: 8,\n    height: 8,\n    borderRadius: 4,\n    backgroundColor: \"rgba(130,4,150, 0.9)\",\n  },\n  scrollView: {\n    position: \"absolute\",\n    bottom: 20,\n    left: 0,\n    right: 0,\n    paddingVertical: 10,\n  },\n  endPadding: {\n    paddingRight: 10,\n  },\n  card: {\n    padding: 10,\n    elevation: 2,\n    backgroundColor: \"#FFF\",\n    marginHorizontal: 10,\n    shadowColor: \"#000\",\n    shadowRadius: 5,\n    shadowOpacity: 0.3,\n    shadowOffset: { x: 2, y: -2 },\n    height: CARD_HEIGHT,\n    width: CARD_WIDTH,\n    overflow: \"hidden\",\n  },\n  cardImage: {\n    flex: 3,\n    width: \"100%\",\n    height: \"100%\",\n    alignSelf: \"center\",\n  },\n  textContent: {\n    flex: 1,\n  },\n  cardtitle: {\n    fontSize: 12,\n    marginTop: 5,\n    fontWeight: \"bold\",\n  },\n  cardDescription: {\n    fontSize: 12,\n    color: \"#444\",\n  },\n  markerWrap: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n\n  ring: {\n    width: 24,\n    height: 24,\n    borderRadius: 12,\n    backgroundColor: \"rgba(130,4,150, 0.3)\",\n    position: \"absolute\",\n    borderWidth: 1,\n    borderColor: \"rgba(130,4,150, 0.5)\",\n  },\n  button: {\n    alignItems: \"center\",\n    marginTop: 5,\n  },\n  book: {\n    width: \"100%\",\n    padding: 5,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderRadius: 3,\n  },\n  textbook: {\n    fontSize: 14,\n    fontWeight: \"bold\",\n  },\n});\n\nexport default ListingsScreen;\n\n// {getListingsApi.error && (\n//   <>\n//     <AppText>Couldn't retrieve the listings.</AppText>\n//     <Button title=\"Retry\" onPress={getListingsApi.request} />\n//   </>\n// )}\n\n// style={styles.marker}\n// coordinate={{\n//   latitude: marker.location.latitude,\n//   longitude: marker.location.longitude,\n// }}\n// title={marker.title}\n// onPress={() => console.log(marker.location)}\n// description={marker.description}\n"]},"metadata":{},"sourceType":"module"}