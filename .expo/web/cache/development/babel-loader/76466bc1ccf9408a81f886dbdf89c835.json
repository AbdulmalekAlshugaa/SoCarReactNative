{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"P:\\\\React Native\\\\Moah Course\\\\End\\\\App.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from \"react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { AppLoading } from \"expo\";\nimport navigationTheme from \"./app/navigation/navigationTheme\";\nimport AppNavigator from \"./app/navigation/AppNavigator\";\nimport OfflineNotice from \"./app/components/OfflineNotice\";\nimport AuthNavigator from \"./app/navigation/AuthNavigator\";\nimport AuthContext from \"./app/auth/context\";\nimport authStorage from \"./app/auth/storage\";\nimport { navigationRef } from \"./app/navigation/rootNavigation\";\nexport default function App() {\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      user = _useState2[0],\n      setUser = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isReady = _useState4[0],\n      setIsReady = _useState4[1];\n\n  useEffect(function () {\n    restoreUser();\n  }, []);\n\n  var restoreUser = function restoreUser() {\n    var user;\n    return _regeneratorRuntime.async(function restoreUser$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(authStorage.getUser());\n\n          case 2:\n            user = _context.sent;\n            if (user) setUser(user);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(AuthContext.Provider, {\n    value: {\n      user: user,\n      setUser: setUser\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, React.createElement(OfflineNotice, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }), React.createElement(NavigationContainer, {\n    ref: navigationRef,\n    theme: navigationTheme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, user ? React.createElement(AppNavigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }) : React.createElement(AuthNavigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 36\n    }\n  })));\n}","map":{"version":3,"sources":["P:/React Native/Moah Course/End/App.js"],"names":["React","useState","useEffect","NavigationContainer","AppLoading","navigationTheme","AppNavigator","OfflineNotice","AuthNavigator","AuthContext","authStorage","navigationRef","App","user","setUser","isReady","setIsReady","restoreUser","getUser"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,UAAT,QAA2B,MAA3B;AAEA,OAAOC,eAAP;AACA,OAAOC,YAAP;AACA,OAAOC,aAAP;AACA,OAAOC,aAAP;AACA,OAAOC,WAAP;AACA,OAAOC,WAAP;AACA,SAASC,aAAT;AAEA,eAAe,SAASC,GAAT,GAAe;AAC5B,kBAAwBX,QAAQ,EAAhC;AAAA;AAAA,MAAOY,IAAP;AAAA,MAAaC,OAAb;;AACA,mBAA8Bb,QAAQ,CAAC,KAAD,CAAtC;AAAA;AAAA,MAAOc,OAAP;AAAA,MAAgBC,UAAhB;;AAEAd,EAAAA,SAAS,CAAC,YAAM;AACde,IAAAA,WAAW;AACZ,GAFQ,EAEN,EAFM,CAAT;;AAIA,MAAMA,WAAW,GAAG,SAAdA,WAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACCP,WAAW,CAACQ,OAAZ,EADD;;AAAA;AACZL,YAAAA,IADY;AAElB,gBAAIA,IAAJ,EAAUC,OAAO,CAACD,IAAD,CAAP;;AAFQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAApB;;AAYA,SACE,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAEA,MAAAA,IAAI,EAAJA,IAAF;AAAQC,MAAAA,OAAO,EAAPA;AAAR,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,mBAAD;AAAqB,IAAA,GAAG,EAAEH,aAA1B;AAAyC,IAAA,KAAK,EAAEN,eAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGQ,IAAI,GAAG,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAAsB,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAD7B,CAFF,CADF;AAQD","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { AppLoading } from \"expo\";\n\nimport navigationTheme from \"./app/navigation/navigationTheme\";\nimport AppNavigator from \"./app/navigation/AppNavigator\";\nimport OfflineNotice from \"./app/components/OfflineNotice\";\nimport AuthNavigator from \"./app/navigation/AuthNavigator\";\nimport AuthContext from \"./app/auth/context\";\nimport authStorage from \"./app/auth/storage\";\nimport { navigationRef } from \"./app/navigation/rootNavigation\";\n\nexport default function App() {\n  const [user, setUser] = useState();\n  const [isReady, setIsReady] = useState(false);\n\n  useEffect(() => {\n    restoreUser();\n  }, []);\n\n  const restoreUser = async () => {\n    const user = await authStorage.getUser();\n    if (user) setUser(user);\n  };\n\n  // if (!isReady) {\n  //   console.log(\"User data\", user);\n  //   return (\n  //     <AppLoading startAsync={restoreUser} onFinish={() => setIsReady(true)} />\n  //   );\n  // }\n\n  return (\n    <AuthContext.Provider value={{ user, setUser }}>\n      <OfflineNotice />\n      <NavigationContainer ref={navigationRef} theme={navigationTheme}>\n        {user ? <AppNavigator /> : <AuthNavigator />}\n      </NavigationContainer>\n    </AuthContext.Provider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}